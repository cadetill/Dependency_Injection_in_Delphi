unit TestuOrderProcessor;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uOrder, uOrderInterfaces;

type
  // Test methods for class TOrderProcessor

  TestTOrderProcessor = class(TTestCase)
  strict private
    FOrderProcessor: IOrderProcessor;
  published
    procedure TestProcessOrder;
  end;

implementation

uses
    uOrderMocks
  , uOrderProcessor
  , Spring.Container
  , Spring.Services
  ;

procedure TestTOrderProcessor.TestProcessOrder;
var
  aOrder: TOrder;
begin
  GlobalContainer.Build;
  // TODO: Setup method call parameters
  FOrderProcessor := ServiceLocator.GetService<IOrderProcessor>;//TOrderProcessor.Create;//(ServiceLocator.Resolve<IOrderValidator>, ServiceLocator.Resolve<IOrderEntry>);
  aOrder := TOrder.Create;
  try
    Check(FOrderProcessor.ProcessOrder(aOrder));
  finally
    aOrder.Free;
  end;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTOrderProcessor.Suite);
end.

